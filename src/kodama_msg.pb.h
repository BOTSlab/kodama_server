// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kodama_msg.proto
// Protobuf C++ Version: 5.29.3

#ifndef kodama_5fmsg_2eproto_2epb_2eh
#define kodama_5fmsg_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kodama_5fmsg_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kodama_5fmsg_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kodama_5fmsg_2eproto;
namespace kodama {
class RequestData;
struct RequestDataDefaultTypeInternal;
extern RequestDataDefaultTypeInternal _RequestData_default_instance_;
class SensorData;
struct SensorDataDefaultTypeInternal;
extern SensorDataDefaultTypeInternal _SensorData_default_instance_;
class SensorData_Pose2D;
struct SensorData_Pose2DDefaultTypeInternal;
extern SensorData_Pose2DDefaultTypeInternal _SensorData_Pose2D_default_instance_;
class SensorData_Position2D;
struct SensorData_Position2DDefaultTypeInternal;
extern SensorData_Position2DDefaultTypeInternal _SensorData_Position2D_default_instance_;
}  // namespace kodama
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kodama {

// ===================================================================


// -------------------------------------------------------------------

class SensorData_Position2D final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kodama.SensorData.Position2D) */ {
 public:
  inline SensorData_Position2D() : SensorData_Position2D(nullptr) {}
  ~SensorData_Position2D() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SensorData_Position2D* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SensorData_Position2D));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SensorData_Position2D(
      ::google::protobuf::internal::ConstantInitialized);

  inline SensorData_Position2D(const SensorData_Position2D& from) : SensorData_Position2D(nullptr, from) {}
  inline SensorData_Position2D(SensorData_Position2D&& from) noexcept
      : SensorData_Position2D(nullptr, std::move(from)) {}
  inline SensorData_Position2D& operator=(const SensorData_Position2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline SensorData_Position2D& operator=(SensorData_Position2D&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SensorData_Position2D& default_instance() {
    return *internal_default_instance();
  }
  static inline const SensorData_Position2D* internal_default_instance() {
    return reinterpret_cast<const SensorData_Position2D*>(
        &_SensorData_Position2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SensorData_Position2D& a, SensorData_Position2D& b) { a.Swap(&b); }
  inline void Swap(SensorData_Position2D* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SensorData_Position2D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SensorData_Position2D* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SensorData_Position2D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SensorData_Position2D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SensorData_Position2D& from) { SensorData_Position2D::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SensorData_Position2D* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kodama.SensorData.Position2D"; }

 protected:
  explicit SensorData_Position2D(::google::protobuf::Arena* arena);
  SensorData_Position2D(::google::protobuf::Arena* arena, const SensorData_Position2D& from);
  SensorData_Position2D(::google::protobuf::Arena* arena, SensorData_Position2D&& from) noexcept
      : SensorData_Position2D(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // int32 x = 1;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 2;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kodama.SensorData.Position2D)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SensorData_Position2D& from_msg);
    ::int32_t x_;
    ::int32_t y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kodama_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SensorData_Pose2D final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kodama.SensorData.Pose2D) */ {
 public:
  inline SensorData_Pose2D() : SensorData_Pose2D(nullptr) {}
  ~SensorData_Pose2D() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SensorData_Pose2D* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SensorData_Pose2D));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SensorData_Pose2D(
      ::google::protobuf::internal::ConstantInitialized);

  inline SensorData_Pose2D(const SensorData_Pose2D& from) : SensorData_Pose2D(nullptr, from) {}
  inline SensorData_Pose2D(SensorData_Pose2D&& from) noexcept
      : SensorData_Pose2D(nullptr, std::move(from)) {}
  inline SensorData_Pose2D& operator=(const SensorData_Pose2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline SensorData_Pose2D& operator=(SensorData_Pose2D&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SensorData_Pose2D& default_instance() {
    return *internal_default_instance();
  }
  static inline const SensorData_Pose2D* internal_default_instance() {
    return reinterpret_cast<const SensorData_Pose2D*>(
        &_SensorData_Pose2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SensorData_Pose2D& a, SensorData_Pose2D& b) { a.Swap(&b); }
  inline void Swap(SensorData_Pose2D* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SensorData_Pose2D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SensorData_Pose2D* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SensorData_Pose2D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SensorData_Pose2D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SensorData_Pose2D& from) { SensorData_Pose2D::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SensorData_Pose2D* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kodama.SensorData.Pose2D"; }

 protected:
  explicit SensorData_Pose2D(::google::protobuf::Arena* arena);
  SensorData_Pose2D(::google::protobuf::Arena* arena, const SensorData_Pose2D& from);
  SensorData_Pose2D(::google::protobuf::Arena* arena, SensorData_Pose2D&& from) noexcept
      : SensorData_Pose2D(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kYawFieldNumber = 3,
  };
  // int32 x = 1;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 2;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // float yaw = 3;
  void clear_yaw() ;
  float yaw() const;
  void set_yaw(float value);

  private:
  float _internal_yaw() const;
  void _internal_set_yaw(float value);

  public:
  // @@protoc_insertion_point(class_scope:kodama.SensorData.Pose2D)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SensorData_Pose2D& from_msg);
    ::int32_t x_;
    ::int32_t y_;
    float yaw_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kodama_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class RequestData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kodama.RequestData) */ {
 public:
  inline RequestData() : RequestData(nullptr) {}
  ~RequestData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RequestData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RequestData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestData(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestData(const RequestData& from) : RequestData(nullptr, from) {}
  inline RequestData(RequestData&& from) noexcept
      : RequestData(nullptr, std::move(from)) {}
  inline RequestData& operator=(const RequestData& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestData& operator=(RequestData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestData& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestData* internal_default_instance() {
    return reinterpret_cast<const RequestData*>(
        &_RequestData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RequestData& a, RequestData& b) { a.Swap(&b); }
  inline void Swap(RequestData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RequestData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestData& from) { RequestData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RequestData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kodama.RequestData"; }

 protected:
  explicit RequestData(::google::protobuf::Arena* arena);
  RequestData(::google::protobuf::Arena* arena, const RequestData& from);
  RequestData(::google::protobuf::Arena* arena, RequestData&& from) noexcept
      : RequestData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagIdFieldNumber = 1,
    kVFieldNumber = 2,
    kWFieldNumber = 3,
    kTauFieldNumber = 4,
    kScenarioFieldNumber = 6,
    kTargetXFieldNumber = 7,
    kTargetYFieldNumber = 8,
  };
  // int32 tag_id = 1;
  void clear_tag_id() ;
  ::int32_t tag_id() const;
  void set_tag_id(::int32_t value);

  private:
  ::int32_t _internal_tag_id() const;
  void _internal_set_tag_id(::int32_t value);

  public:
  // int32 v = 2;
  void clear_v() ;
  ::int32_t v() const;
  void set_v(::int32_t value);

  private:
  ::int32_t _internal_v() const;
  void _internal_set_v(::int32_t value);

  public:
  // int32 w = 3;
  void clear_w() ;
  ::int32_t w() const;
  void set_w(::int32_t value);

  private:
  ::int32_t _internal_w() const;
  void _internal_set_w(::int32_t value);

  public:
  // int32 tau = 4;
  void clear_tau() ;
  ::int32_t tau() const;
  void set_tau(::int32_t value);

  private:
  ::int32_t _internal_tau() const;
  void _internal_set_tau(::int32_t value);

  public:
  // int32 scenario = 6;
  void clear_scenario() ;
  ::int32_t scenario() const;
  void set_scenario(::int32_t value);

  private:
  ::int32_t _internal_scenario() const;
  void _internal_set_scenario(::int32_t value);

  public:
  // int32 targetX = 7;
  void clear_targetx() ;
  ::int32_t targetx() const;
  void set_targetx(::int32_t value);

  private:
  ::int32_t _internal_targetx() const;
  void _internal_set_targetx(::int32_t value);

  public:
  // int32 targetY = 8;
  void clear_targety() ;
  ::int32_t targety() const;
  void set_targety(::int32_t value);

  private:
  ::int32_t _internal_targety() const;
  void _internal_set_targety(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kodama.RequestData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestData& from_msg);
    ::int32_t tag_id_;
    ::int32_t v_;
    ::int32_t w_;
    ::int32_t tau_;
    ::int32_t scenario_;
    ::int32_t targetx_;
    ::int32_t targety_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kodama_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SensorData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kodama.SensorData) */ {
 public:
  inline SensorData() : SensorData(nullptr) {}
  ~SensorData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SensorData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SensorData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SensorData(
      ::google::protobuf::internal::ConstantInitialized);

  inline SensorData(const SensorData& from) : SensorData(nullptr, from) {}
  inline SensorData(SensorData&& from) noexcept
      : SensorData(nullptr, std::move(from)) {}
  inline SensorData& operator=(const SensorData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SensorData& operator=(SensorData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SensorData& default_instance() {
    return *internal_default_instance();
  }
  static inline const SensorData* internal_default_instance() {
    return reinterpret_cast<const SensorData*>(
        &_SensorData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SensorData& a, SensorData& b) { a.Swap(&b); }
  inline void Swap(SensorData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SensorData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SensorData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SensorData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SensorData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SensorData& from) { SensorData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SensorData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kodama.SensorData"; }

 protected:
  explicit SensorData(::google::protobuf::Arena* arena);
  SensorData(::google::protobuf::Arena* arena, const SensorData& from);
  SensorData(::google::protobuf::Arena* arena, SensorData&& from) noexcept
      : SensorData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Position2D = SensorData_Position2D;
  using Pose2D = SensorData_Pose2D;

  // accessors -------------------------------------------------------
  enum : int {
    kNearbyRobotPosesFieldNumber = 2,
    kNearbyTargetPositionsFieldNumber = 3,
    kPoseFieldNumber = 1,
    kTimestampFieldNumber = 4,
  };
  // repeated .kodama.SensorData.Pose2D nearby_robot_poses = 2;
  int nearby_robot_poses_size() const;
  private:
  int _internal_nearby_robot_poses_size() const;

  public:
  void clear_nearby_robot_poses() ;
  ::kodama::SensorData_Pose2D* mutable_nearby_robot_poses(int index);
  ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Pose2D>* mutable_nearby_robot_poses();

  private:
  const ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Pose2D>& _internal_nearby_robot_poses() const;
  ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Pose2D>* _internal_mutable_nearby_robot_poses();
  public:
  const ::kodama::SensorData_Pose2D& nearby_robot_poses(int index) const;
  ::kodama::SensorData_Pose2D* add_nearby_robot_poses();
  const ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Pose2D>& nearby_robot_poses() const;
  // repeated .kodama.SensorData.Position2D nearby_target_positions = 3;
  int nearby_target_positions_size() const;
  private:
  int _internal_nearby_target_positions_size() const;

  public:
  void clear_nearby_target_positions() ;
  ::kodama::SensorData_Position2D* mutable_nearby_target_positions(int index);
  ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Position2D>* mutable_nearby_target_positions();

  private:
  const ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Position2D>& _internal_nearby_target_positions() const;
  ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Position2D>* _internal_mutable_nearby_target_positions();
  public:
  const ::kodama::SensorData_Position2D& nearby_target_positions(int index) const;
  ::kodama::SensorData_Position2D* add_nearby_target_positions();
  const ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Position2D>& nearby_target_positions() const;
  // .kodama.SensorData.Pose2D pose = 1;
  bool has_pose() const;
  void clear_pose() ;
  const ::kodama::SensorData_Pose2D& pose() const;
  PROTOBUF_NODISCARD ::kodama::SensorData_Pose2D* release_pose();
  ::kodama::SensorData_Pose2D* mutable_pose();
  void set_allocated_pose(::kodama::SensorData_Pose2D* value);
  void unsafe_arena_set_allocated_pose(::kodama::SensorData_Pose2D* value);
  ::kodama::SensorData_Pose2D* unsafe_arena_release_pose();

  private:
  const ::kodama::SensorData_Pose2D& _internal_pose() const;
  ::kodama::SensorData_Pose2D* _internal_mutable_pose();

  public:
  // .google.protobuf.Timestamp timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:kodama.SensorData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SensorData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kodama::SensorData_Pose2D > nearby_robot_poses_;
    ::google::protobuf::RepeatedPtrField< ::kodama::SensorData_Position2D > nearby_target_positions_;
    ::kodama::SensorData_Pose2D* pose_;
    ::google::protobuf::Timestamp* timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kodama_5fmsg_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RequestData

// int32 tag_id = 1;
inline void RequestData::clear_tag_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_id_ = 0;
}
inline ::int32_t RequestData::tag_id() const {
  // @@protoc_insertion_point(field_get:kodama.RequestData.tag_id)
  return _internal_tag_id();
}
inline void RequestData::set_tag_id(::int32_t value) {
  _internal_set_tag_id(value);
  // @@protoc_insertion_point(field_set:kodama.RequestData.tag_id)
}
inline ::int32_t RequestData::_internal_tag_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tag_id_;
}
inline void RequestData::_internal_set_tag_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_id_ = value;
}

// int32 v = 2;
inline void RequestData::clear_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_ = 0;
}
inline ::int32_t RequestData::v() const {
  // @@protoc_insertion_point(field_get:kodama.RequestData.v)
  return _internal_v();
}
inline void RequestData::set_v(::int32_t value) {
  _internal_set_v(value);
  // @@protoc_insertion_point(field_set:kodama.RequestData.v)
}
inline ::int32_t RequestData::_internal_v() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v_;
}
inline void RequestData::_internal_set_v(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_ = value;
}

// int32 w = 3;
inline void RequestData::clear_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_ = 0;
}
inline ::int32_t RequestData::w() const {
  // @@protoc_insertion_point(field_get:kodama.RequestData.w)
  return _internal_w();
}
inline void RequestData::set_w(::int32_t value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:kodama.RequestData.w)
}
inline ::int32_t RequestData::_internal_w() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.w_;
}
inline void RequestData::_internal_set_w(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_ = value;
}

// int32 tau = 4;
inline void RequestData::clear_tau() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tau_ = 0;
}
inline ::int32_t RequestData::tau() const {
  // @@protoc_insertion_point(field_get:kodama.RequestData.tau)
  return _internal_tau();
}
inline void RequestData::set_tau(::int32_t value) {
  _internal_set_tau(value);
  // @@protoc_insertion_point(field_set:kodama.RequestData.tau)
}
inline ::int32_t RequestData::_internal_tau() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tau_;
}
inline void RequestData::_internal_set_tau(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tau_ = value;
}

// int32 scenario = 6;
inline void RequestData::clear_scenario() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scenario_ = 0;
}
inline ::int32_t RequestData::scenario() const {
  // @@protoc_insertion_point(field_get:kodama.RequestData.scenario)
  return _internal_scenario();
}
inline void RequestData::set_scenario(::int32_t value) {
  _internal_set_scenario(value);
  // @@protoc_insertion_point(field_set:kodama.RequestData.scenario)
}
inline ::int32_t RequestData::_internal_scenario() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scenario_;
}
inline void RequestData::_internal_set_scenario(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scenario_ = value;
}

// int32 targetX = 7;
inline void RequestData::clear_targetx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetx_ = 0;
}
inline ::int32_t RequestData::targetx() const {
  // @@protoc_insertion_point(field_get:kodama.RequestData.targetX)
  return _internal_targetx();
}
inline void RequestData::set_targetx(::int32_t value) {
  _internal_set_targetx(value);
  // @@protoc_insertion_point(field_set:kodama.RequestData.targetX)
}
inline ::int32_t RequestData::_internal_targetx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetx_;
}
inline void RequestData::_internal_set_targetx(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetx_ = value;
}

// int32 targetY = 8;
inline void RequestData::clear_targety() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targety_ = 0;
}
inline ::int32_t RequestData::targety() const {
  // @@protoc_insertion_point(field_get:kodama.RequestData.targetY)
  return _internal_targety();
}
inline void RequestData::set_targety(::int32_t value) {
  _internal_set_targety(value);
  // @@protoc_insertion_point(field_set:kodama.RequestData.targetY)
}
inline ::int32_t RequestData::_internal_targety() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targety_;
}
inline void RequestData::_internal_set_targety(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targety_ = value;
}

// -------------------------------------------------------------------

// SensorData_Position2D

// int32 x = 1;
inline void SensorData_Position2D::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline ::int32_t SensorData_Position2D::x() const {
  // @@protoc_insertion_point(field_get:kodama.SensorData.Position2D.x)
  return _internal_x();
}
inline void SensorData_Position2D::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:kodama.SensorData.Position2D.x)
}
inline ::int32_t SensorData_Position2D::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void SensorData_Position2D::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int32 y = 2;
inline void SensorData_Position2D::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline ::int32_t SensorData_Position2D::y() const {
  // @@protoc_insertion_point(field_get:kodama.SensorData.Position2D.y)
  return _internal_y();
}
inline void SensorData_Position2D::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:kodama.SensorData.Position2D.y)
}
inline ::int32_t SensorData_Position2D::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void SensorData_Position2D::_internal_set_y(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// SensorData_Pose2D

// int32 x = 1;
inline void SensorData_Pose2D::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline ::int32_t SensorData_Pose2D::x() const {
  // @@protoc_insertion_point(field_get:kodama.SensorData.Pose2D.x)
  return _internal_x();
}
inline void SensorData_Pose2D::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:kodama.SensorData.Pose2D.x)
}
inline ::int32_t SensorData_Pose2D::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void SensorData_Pose2D::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int32 y = 2;
inline void SensorData_Pose2D::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline ::int32_t SensorData_Pose2D::y() const {
  // @@protoc_insertion_point(field_get:kodama.SensorData.Pose2D.y)
  return _internal_y();
}
inline void SensorData_Pose2D::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:kodama.SensorData.Pose2D.y)
}
inline ::int32_t SensorData_Pose2D::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void SensorData_Pose2D::_internal_set_y(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float yaw = 3;
inline void SensorData_Pose2D::clear_yaw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_ = 0;
}
inline float SensorData_Pose2D::yaw() const {
  // @@protoc_insertion_point(field_get:kodama.SensorData.Pose2D.yaw)
  return _internal_yaw();
}
inline void SensorData_Pose2D::set_yaw(float value) {
  _internal_set_yaw(value);
  // @@protoc_insertion_point(field_set:kodama.SensorData.Pose2D.yaw)
}
inline float SensorData_Pose2D::_internal_yaw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yaw_;
}
inline void SensorData_Pose2D::_internal_set_yaw(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_ = value;
}

// -------------------------------------------------------------------

// SensorData

// .kodama.SensorData.Pose2D pose = 1;
inline bool SensorData::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline void SensorData::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kodama::SensorData_Pose2D& SensorData::_internal_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kodama::SensorData_Pose2D* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::kodama::SensorData_Pose2D&>(::kodama::_SensorData_Pose2D_default_instance_);
}
inline const ::kodama::SensorData_Pose2D& SensorData::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kodama.SensorData.pose)
  return _internal_pose();
}
inline void SensorData::unsafe_arena_set_allocated_pose(::kodama::SensorData_Pose2D* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::kodama::SensorData_Pose2D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kodama.SensorData.pose)
}
inline ::kodama::SensorData_Pose2D* SensorData::release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kodama::SensorData_Pose2D* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kodama::SensorData_Pose2D* SensorData::unsafe_arena_release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kodama.SensorData.pose)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kodama::SensorData_Pose2D* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::kodama::SensorData_Pose2D* SensorData::_internal_mutable_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kodama::SensorData_Pose2D>(GetArena());
    _impl_.pose_ = reinterpret_cast<::kodama::SensorData_Pose2D*>(p);
  }
  return _impl_.pose_;
}
inline ::kodama::SensorData_Pose2D* SensorData::mutable_pose() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kodama::SensorData_Pose2D* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:kodama.SensorData.pose)
  return _msg;
}
inline void SensorData::set_allocated_pose(::kodama::SensorData_Pose2D* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pose_ = reinterpret_cast<::kodama::SensorData_Pose2D*>(value);
  // @@protoc_insertion_point(field_set_allocated:kodama.SensorData.pose)
}

// repeated .kodama.SensorData.Pose2D nearby_robot_poses = 2;
inline int SensorData::_internal_nearby_robot_poses_size() const {
  return _internal_nearby_robot_poses().size();
}
inline int SensorData::nearby_robot_poses_size() const {
  return _internal_nearby_robot_poses_size();
}
inline void SensorData::clear_nearby_robot_poses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nearby_robot_poses_.Clear();
}
inline ::kodama::SensorData_Pose2D* SensorData::mutable_nearby_robot_poses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kodama.SensorData.nearby_robot_poses)
  return _internal_mutable_nearby_robot_poses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Pose2D>* SensorData::mutable_nearby_robot_poses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kodama.SensorData.nearby_robot_poses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nearby_robot_poses();
}
inline const ::kodama::SensorData_Pose2D& SensorData::nearby_robot_poses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kodama.SensorData.nearby_robot_poses)
  return _internal_nearby_robot_poses().Get(index);
}
inline ::kodama::SensorData_Pose2D* SensorData::add_nearby_robot_poses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kodama::SensorData_Pose2D* _add = _internal_mutable_nearby_robot_poses()->Add();
  // @@protoc_insertion_point(field_add:kodama.SensorData.nearby_robot_poses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Pose2D>& SensorData::nearby_robot_poses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kodama.SensorData.nearby_robot_poses)
  return _internal_nearby_robot_poses();
}
inline const ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Pose2D>&
SensorData::_internal_nearby_robot_poses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nearby_robot_poses_;
}
inline ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Pose2D>*
SensorData::_internal_mutable_nearby_robot_poses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nearby_robot_poses_;
}

// repeated .kodama.SensorData.Position2D nearby_target_positions = 3;
inline int SensorData::_internal_nearby_target_positions_size() const {
  return _internal_nearby_target_positions().size();
}
inline int SensorData::nearby_target_positions_size() const {
  return _internal_nearby_target_positions_size();
}
inline void SensorData::clear_nearby_target_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nearby_target_positions_.Clear();
}
inline ::kodama::SensorData_Position2D* SensorData::mutable_nearby_target_positions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kodama.SensorData.nearby_target_positions)
  return _internal_mutable_nearby_target_positions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Position2D>* SensorData::mutable_nearby_target_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kodama.SensorData.nearby_target_positions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nearby_target_positions();
}
inline const ::kodama::SensorData_Position2D& SensorData::nearby_target_positions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kodama.SensorData.nearby_target_positions)
  return _internal_nearby_target_positions().Get(index);
}
inline ::kodama::SensorData_Position2D* SensorData::add_nearby_target_positions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kodama::SensorData_Position2D* _add = _internal_mutable_nearby_target_positions()->Add();
  // @@protoc_insertion_point(field_add:kodama.SensorData.nearby_target_positions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Position2D>& SensorData::nearby_target_positions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kodama.SensorData.nearby_target_positions)
  return _internal_nearby_target_positions();
}
inline const ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Position2D>&
SensorData::_internal_nearby_target_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nearby_target_positions_;
}
inline ::google::protobuf::RepeatedPtrField<::kodama::SensorData_Position2D>*
SensorData::_internal_mutable_nearby_target_positions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nearby_target_positions_;
}

// .google.protobuf.Timestamp timestamp = 4;
inline bool SensorData::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SensorData::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SensorData::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kodama.SensorData.timestamp)
  return _internal_timestamp();
}
inline void SensorData::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kodama.SensorData.timestamp)
}
inline ::google::protobuf::Timestamp* SensorData::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* SensorData::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kodama.SensorData.timestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SensorData::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* SensorData::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:kodama.SensorData.timestamp)
  return _msg;
}
inline void SensorData::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kodama.SensorData.timestamp)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace kodama


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kodama_5fmsg_2eproto_2epb_2eh
